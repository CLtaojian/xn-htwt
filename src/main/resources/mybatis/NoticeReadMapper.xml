<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdkj.loan.dao.INoticeReadDAO">
	<resultMap id="noticeRead_DB_Result" type="noticeRead">
		<result column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="status" property="status" />
		<result column="notice_code" property="noticeCode" />
		<result column="ref_type" property="refType" />
	</resultMap>
	<sql id="where_condition">
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="id != null and id != '' ">
				AND t.id = #{id}
			</if>
			<if test="userId != null and userId != '' ">
				AND t.user_id = #{userId}
			</if>
			<if test="status != null and status != '' ">
				AND t.status = #{status}
			</if>
			<if test="noticeCode != null and noticeCode != '' ">
				AND t.notice_code = #{noticeCode}
			</if>
			<if test="refType != null and refType != '' ">
				AND t.ref_type = #{refType}
			</if>
		</trim>
	</sql>
	<select id="select_noticeRead" parameterType="noticeRead"
		resultMap="noticeRead_DB_Result">
		SELECT
		t.id
		,t.user_id
		,t.status
		,t.notice_code
		FROM
		tp_notice_read t
		<include refid="where_condition" />
		<trim prefix="ORDER BY ">
			<if test="order != null and order != '' ">
				t.${order}
			</if>
		</trim>
	</select>

	<select id="select_noticeRead_count" parameterType="noticeRead"
		resultType="java.lang.Long">
		SELECT count(1) FROM tp_notice_read t
		<include refid="where_condition" />
	</select>

	<insert id="insert_noticeRead" parameterType="noticeRead">
		INSERT INTO
		tp_notice_read(
		user_id
		,status
		,notice_code
		,ref_type
		)
		VALUES(
		#{userId}
		,#{status}
		,#{noticeCode}
		,#{refType}
		)
	</insert>
	
	<insert id="insert_noticeReadList" parameterType="List">
		INSERT INTO
		tp_notice_read(
		user_id
		,status
		,notice_code
		,ref_type
		)
		VALUES
		<foreach collection="list" item="noticeRead" separator=",">
			(
			#{noticeRead.userId}
			,#{noticeRead.status}
			,#{noticeRead.noticeCode}
			,#{noticeRead.refType}
			)
		</foreach>
	</insert>
	
	<update id="update_noticeRead" parameterType="noticeRead">
		UPDATE
		tp_notice_read
		SET
		status = #{status}
		WHERE id = #{id}
	</update>
	
	<delete id="delete_noticeRead_ByRef" parameterType="noticeRead">
		DELETE FROM tp_notice_read where notice_code = #{noticeCode}
	</delete>
	
</mapper>