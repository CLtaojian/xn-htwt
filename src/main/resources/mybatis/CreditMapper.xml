<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdkj.loan.dao.ICreditDAO">
	<resultMap id="credit_DB_Result" type="credit">
	
		<result column="code" property="code" />
		<result column="budget_code" property="budgetCode" />
		<result column="company_code" property="companyCode" />
		<result column="sale_user_id" property="saleUserId" />
		<result column="apply_datetime" property="applyDatetime" />
		<result column="loan_bank_code" property="loanBankCode" />
		<result column="shop_way" property="shopWay" />
		<result column="loan_amount" property="loanAmount" />
		<result column="xsz_front" property="xszFront" />
		<result column="xsz_reverse" property="xszReverse" />
		<result column="cur_node_code" property="curNodeCode" />
		<result column="accessory" property="accessory" />
		<result column="apply_datetime" property="applyDatetime" />
		
	</resultMap>
	
	<sql id="where_condition">
		<trim prefix="WHERE" prefixOverrides="AND | OR">	
			<if test="code != null and code != '' ">
				AND t.code = #{code}
			</if>
			<if test="budgetCode != null and budgetCode != '' ">
				AND t.budget_code = #{budgetCode}
			</if>
			<if test="companyCode != null and companyCode != '' ">
				AND t.company_code = #{companyCode}
			</if>
			<if test="saleUserId != null and saleUserId != '' ">
				AND t.sale_user_id = #{saleUserId}
			</if>
			<if test="applyDatetime != null and applyDatetime != '' ">
				AND t.apply_datetime = #{code}
			</if>
			<if test="loanBankCode != null and loanBankCode != '' ">
				AND t.loan_bank_code = #{loanBankCode}
			</if>
			<if test="shopWay != null and shopWay != '' ">
				AND t.shop_way = #{shopWay}
			</if>
			<if test="loanAmount != null and loanAmount != '' ">
				AND t.loan_amount = #{loanAmount}
			</if>
			<if test="xszFront != null and xszFront != '' ">
				AND t.xsz_front = #{xszFront}
			</if>
			<if test="xszReverse != null and xszReverse != '' ">
				AND t.xsz_reverse = #{xszReverse}
			</if>
			<if test="curNodeCode != null and curNodeCode != '' ">
				AND t.cur_node_code = #{xszReverse}
			</if>
			<if test="roleCode != null and roleCode != '' ">
				AND t.cur_node_code = #{xszReverse}
			</if>
		</trim>
	</sql>
	
	<select id="select_credit" parameterType="credit" resultMap="credit_DB_Result">
		select 
		t.code
		,t.company_code
		,t.loan_bank_code
		,t.sale_user_id
		,t.apply_datetime
		
		,t.cur_node_code		
		,t.shop_way
		,t.loan_amount
		,t.xsz_front
		,t.xsz_reverse
		from tdq_credit t
		<include refid="where_condition"/>
		<trim prefix="ORDER BY ">
			<if test="order != null and order != '' ">
				t.${order}
			</if>
		</trim>
	</select>
	
	<select id="select_credit_PagingQuery" parameterType="credit" resultMap="credit_DB_Result">
		select 
		t.code
		,t.company_code
		,t.loan_bank_code
		,t.sale_user_id
		,t.apply_datetime
		
		,t.cur_node_code		
		,t.shop_way
		,t.loan_amount
		,t.xsz_front
		,t.xsz_reverse
		from tdq_credit t inner join tsys_role_node trn on t.cur_node_code=trn.node_code
		<include refid="where_condition"/>
		<trim prefix="ORDER BY ">
			<if test="order != null and order != '' ">
				t.${order}
			</if>
		</trim>
	</select>
	

	<select id="select_creditPageAll" parameterType="credit" resultMap="credit_DB_Result">
		select 
		t.code
		,t.company_code
		,t.loan_bank_code
		,t.sale_user_id
		,t.apply_datetime
		
		,t.cur_node_code		
		,t.shop_way
		,t.loan_amount
		,t.xsz_front
		,t.xsz_reverse
		from tdq_credit t
		<include refid="where_condition"/>
		<trim prefix="ORDER BY ">
			<if test="order != null and order != '' ">
				t.${order}
			</if>
		</trim>
	</select>

	
	<insert id="insert_credit" parameterType="credit">
		INSERT INTO tdq_credit(
		code
		,loan_bank_code
		,shop_way
		,loan_amount
		,xsz_front
		,xsz_reverse
		,cur_node_code
		,apply_datetime
		)
		VALUES(
		#{code}
		,#{loanBankCode}
		,#{shopWay}
		,#{loanAmount}
		,#{xszFront}
		,#{xszReverse}
		,#{curNodeCode}
		,#{applyDatetime}
		)
	</insert>
	
	
	<update id="update_credit" parameterType="credit">
		UPDATE tdq_credit
		SET
		loan_bank_code = #{loanBankCode}
		,shop_way = #{shopWay}
		,loan_amount = #{loanAmount}
		,xsz_front = #{xszFront}
		,xsz_reverse = #{xszReverse}
		,cur_node_code = #{curNodeCode}
		,accessory = #{accessory}
		WHERE
		code = #{code}
	</update>
	
	<select id="select_credit_count" parameterType="credit"
		resultType="java.lang.Long">
		SELECT count(1)
		From tdq_credit t inner join tsys_role_node trn on t.cur_node_code=trn.node_code
		<include refid="where_condition" />
	</select>
	
	<update id="update_node" parameterType="credit">
		UPDATE tdq_credit
		SET
		cur_node_code = #{curNodeCode}
		WHERE code = #{code}
	</update>
	
	
</mapper>
